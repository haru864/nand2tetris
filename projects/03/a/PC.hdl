// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:

    DFF(in=inc, out=currInc);
    DFF(in=reset, out=currReset);
    DFF(in=load, out=currLoad);

    // if (reset[t-1] == 1) then out[t] = 0
    Mux16(a=currOut3, b=false, sel=currReset, out=currOut);

    // else if (load[t-1] == 1) then out[t] = in[t-1]
    Register(in=in, load=true, out=currOut2);
    Mux16(a=currOut6, b=currOut2, sel=currLoad, out=currOut3);

    // else if (inc[t-1] == 1) then out[t] = out[t-1] + 1
    // else out[t] = out[t-1]
    Register(in=currOut, load=true, out=currOut4);
    Inc16(in=currOut4, out=currOut5);
    Mux16(a=currOut4, b=currOut5, sel=currInc, out=currOut6);

    And16(a=true, b=currOut, out=out);
}
